/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LotteryGame,
  LotteryGameInterface,
} from "../../contracts/LotteryGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinatorAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryAlreadyClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryDurationNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryHasNotFinishedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughParticipants",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerCannotParticipateInLotteries",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPaymentIsNotExact",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPriceNotGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "UserHasAlreadyParticipated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "LotteryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ParticipationRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "WinnerDeclared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "WinnerRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "createLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "declareWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "getLottery",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jackpot",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "participants",
            type: "address[]",
          },
          {
            internalType: "enum LotteryGame.State",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct LotteryGame.Lottery",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenLotteriesIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getParticipationsByUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "participate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002d2338038062002d23833981810160405281019062000037919062000211565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505082600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600181905550806000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200026d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000159826200012c565b9050919050565b6200016b816200014c565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b6000819050919050565b620001a68162000191565b8114620001b257600080fd5b50565b600081519050620001c6816200019b565b92915050565b600067ffffffffffffffff82169050919050565b620001eb81620001cc565b8114620001f757600080fd5b50565b6000815190506200020b81620001e0565b92915050565b6000806000606084860312156200022d576200022c62000127565b5b60006200023d868287016200017a565b93505060206200025086828701620001b5565b92505060406200026386828701620001fa565b9150509250925092565b608051612a93620002906000396000818161070001526107540152612a936000f3fe6080604052600436106100e75760003560e01c806382d63ee61161008a5780639384c39d116100595780639384c39d146102d3578063beff730f14610310578063e580f47b1461034d578063fe35804e14610378576100e7565b806382d63ee614610224578063845c93061461024f5780638da5cb5b1461026b57806392e845f614610296576100e7565b806327e235e3116100c657806327e235e3146101695780633ccfd60b146101a65780634585e33b146101bd5780636e04ff0d146101e6576100e7565b8062c2943c146100ec57806309c1ba2e146101155780631fe543e314610140575b600080fd5b3480156100f857600080fd5b50610113600480360381019061010e9190611fb7565b6103a1565b005b34801561012157600080fd5b5061012a6106e6565b6040516101379190612007565b60405180910390f35b34801561014c57600080fd5b506101676004803603810190610162919061217b565b6106fe565b005b34801561017557600080fd5b50610190600480360381019061018b9190612235565b6107be565b60405161019d9190612271565b60405180910390f35b3480156101b257600080fd5b506101bb6107d6565b005b3480156101c957600080fd5b506101e460048036038101906101df91906122e7565b6108d8565b005b3480156101f257600080fd5b5061020d600480360381019061020891906122e7565b610a72565b60405161021b9291906123d7565b60405180910390f35b34801561023057600080fd5b50610239610c84565b60405161024691906124c5565b60405180910390f35b61026960048036038101906102649190611fb7565b610c95565b005b34801561027757600080fd5b5061028061103d565b60405161028d91906124f6565b60405180910390f35b3480156102a257600080fd5b506102bd60048036038101906102b89190611fb7565b611063565b6040516102ca91906126e2565b60405180910390f35b3480156102df57600080fd5b506102fa60048036038101906102f59190612235565b6111d7565b60405161030791906124c5565b60405180910390f35b34801561031c57600080fd5b5061033760048036038101906103329190611fb7565b61126e565b6040516103449190612271565b60405180910390f35b34801561035957600080fd5b50610362611292565b60405161036f9190612271565b60405180910390f35b34801561038457600080fd5b5061039f600480360381019061039a9190612704565b61129e565b005b806000600760008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156104c557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161047b575b505050505081526020016006820160009054906101000a900460ff1660028111156104f3576104f26125cf565b5b6002811115610505576105046125cf565b5b81525050905060008160000151141561054a576040517f0d294f3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060076000858152602001908152602001600020905061057b8160060160009054906101000a900460ff16611531565b6105888160020154611592565b61059881600501805490506115cf565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d3060015460008054906101000a900467ffffffffffffffff166003620186a060016040518663ffffffff1660e01b8152600401610618959493929190612799565b602060405180830381600087803b15801561063257600080fd5b505af1158015610646573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066a9190612801565b905084600860008381526020019081526020016000208190555060018260060160006101000a81548160ff021916908360028111156106ac576106ab6125cf565b5b021790555080857f708691262b677612d65fe057f7788158f3bfedcc25f9d7b50adaa889b0048ace60405160405180910390a35050505050565b60008054906101000a900467ffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107b057337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016107a792919061282e565b60405180910390fd5b6107ba828261160d565b5050565b600a6020528060005260406000206000915090505481565b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161082757600080fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff168160405161089090612888565b60006040518083038185875af1925050503d80600081146108cd576040519150601f19603f3d011682016040523d82523d6000602084013e6108d2565b606091505b50505050565b600082828101906108e99190611fb7565b90506000600760008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a0e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109c4575b505050505081526020016006820160009054906101000a900460ff166002811115610a3c57610a3b6125cf565b5b6002811115610a4e57610a4d6125cf565b5b815250509050610a5d81611851565b15610a6c57610a6b826103a1565b5b50505050565b6000606060008060405180602001604052806000815250905060005b82158015610aa45750610aa160036118a6565b81105b15610c74576000610abf8260036118bb90919063ffffffff16565b90506000600760008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610be457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b9a575b505050505081526020016006820160009054906101000a900460ff166002811115610c1257610c116125cf565b5b6002811115610c2457610c236125cf565b5b815250509050610c3381611851565b15610c5f576001945081604051602001610c4d9190612271565b60405160208183030381529060405293505b8280610c6a906128cc565b9350505050610a8e565b8282945094505050509250929050565b6060610c9060036118d5565b905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610d1d576040517fb8ea493b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600760008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e4157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610df7575b505050505081526020016006820160009054906101000a900460ff166002811115610e6f57610e6e6125cf565b5b6002811115610e8157610e806125cf565b5b815250509050600081600001511415610ec6576040517f0d294f3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600760008581526020019081526020016000209050610ee6846118f6565b610f008160060160009054906101000a900460ff16611531565b610f0d8160010154611b13565b80600501339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816003016000828254610f869190612915565b92505081905550600960003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16847f6c99a0dcc97bf964290aa2caae5586725125e73a4d885d742a168903403dc06e60405160405180910390a350505050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61106b611e61565b600760008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180548060200260200160405190810160405280929190818152602001828054801561118c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611142575b505050505081526020016006820160009054906101000a900460ff1660028111156111ba576111b96125cf565b5b60028111156111cc576111cb6125cf565b5b815250509050919050565b6060600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561126257602002820191906000526020600020905b81548152602001906001019080831161124e575b50505050509050919050565b600b818154811061127e57600080fd5b906000526020600020016000915090505481565b60028060000154905081565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611325576040517f3e8be92f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61132e82611b4f565b61133781611b8c565b600081426113459190612915565b90506113516002611bca565b600061135d6002611be0565b905060008067ffffffffffffffff81111561137b5761137a612038565b5b6040519080825280602002602001820160405280156113a95781602001602082028036833780820191505090505b5090506040518060e0016040528083815260200186815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160006002811115611407576114066125cf565b5b815250600760008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050190805190602001906114a8929190611ec6565b5060c08201518160060160006101000a81548160ff021916908360028111156114d4576114d36125cf565b5b02179055509050506114f0826003611bee90919063ffffffff16565b5084827fbcab9af3175c8a9d53b9308a82ee378a84c65b0c22e3dfea2afac802c73a078a856040516115229190612271565b60405180910390a35050505050565b60006002811115611545576115446125cf565b5b816002811115611558576115576125cf565b5b1461158f576040517f4174a35500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b428111156115cc576040517fd9b64fdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600281101561160a576040517f99f46cd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60006008600084815260200190815260200160002054905060006007600083815260200190815260200160002090506000816005018054806020026020016040519081016040528092919081815260200182805480156116c257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611678575b505050505090506000818251866000815181106116e2576116e161296b565b5b60200260200101516116f491906129c9565b815181106117055761170461296b565b5b60200260200101519050808360040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260030154600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117a59190612915565b9250508190555060028360060160006101000a81548160ff021916908360028111156117d4576117d36125cf565b5b02179055506117ed846003611c0890919063ffffffff16565b508073ffffffffffffffffffffffffffffffffffffffff16847f4d3647387a0671b375a6cfb75769ed74ec10d3a37f6d3b392b12926fe9a099d160405160405180910390a36008600087815260200190815260200160002060009055505050505050565b600042826040015110801561188e575060006002811115611875576118746125cf565b5b8260c00151600281111561188c5761188b6125cf565b5b145b801561189f575060018260a0015151115b9050919050565b60006118b482600001611c22565b9050919050565b60006118ca8360000183611c33565b60001c905092915050565b606060006118e583600001611c5e565b905060608190508092505050919050565b6000600760008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015611a1957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116119cf575b505050505081526020016006820160009054906101000a900460ff166002811115611a4757611a466125cf565b5b6002811115611a5957611a586125cf565b5b81525050905060008160a001519050600033905060005b8251811015611b0c57828181518110611a8c57611a8b61296b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611af9576040517fbb25dcac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611b04906128cc565b915050611a70565b5050505050565b803414611b4c576040517f7289b57300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60008111611b89576040517f114eafc600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b603c811015611bc7576040517fe2f2556e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000611c00836000018360001b611cba565b905092915050565b6000611c1a836000018360001b611d2a565b905092915050565b600081600001805490509050919050565b6000826000018281548110611c4b57611c4a61296b565b5b9060005260206000200154905092915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015611cae57602002820191906000526020600020905b815481526020019060010190808311611c9a575b50505050509050919050565b6000611cc68383611e3e565b611d1f578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050611d24565b600090505b92915050565b60008083600101600084815260200190815260200160002054905060008114611e32576000600182611d5c91906129fa565b9050600060018660000180549050611d7491906129fa565b9050818114611de3576000866000018281548110611d9557611d9461296b565b5b9060005260206000200154905080876000018481548110611db957611db861296b565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b85600001805480611df757611df6612a2e565b5b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050611e38565b60009150505b92915050565b600080836001016000848152602001908152602001600020541415905092915050565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006002811115611ec057611ebf6125cf565b5b81525090565b828054828255906000526020600020908101928215611f3f579160200282015b82811115611f3e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611ee6565b5b509050611f4c9190611f50565b5090565b5b80821115611f69576000816000905550600101611f51565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611f9481611f81565b8114611f9f57600080fd5b50565b600081359050611fb181611f8b565b92915050565b600060208284031215611fcd57611fcc611f77565b5b6000611fdb84828501611fa2565b91505092915050565b600067ffffffffffffffff82169050919050565b61200181611fe4565b82525050565b600060208201905061201c6000830184611ff8565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61207082612027565b810181811067ffffffffffffffff8211171561208f5761208e612038565b5b80604052505050565b60006120a2611f6d565b90506120ae8282612067565b919050565b600067ffffffffffffffff8211156120ce576120cd612038565b5b602082029050602081019050919050565b600080fd5b60006120f76120f2846120b3565b612098565b9050808382526020820190506020840283018581111561211a576121196120df565b5b835b81811015612143578061212f8882611fa2565b84526020840193505060208101905061211c565b5050509392505050565b600082601f83011261216257612161612022565b5b81356121728482602086016120e4565b91505092915050565b6000806040838503121561219257612191611f77565b5b60006121a085828601611fa2565b925050602083013567ffffffffffffffff8111156121c1576121c0611f7c565b5b6121cd8582860161214d565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612202826121d7565b9050919050565b612212816121f7565b811461221d57600080fd5b50565b60008135905061222f81612209565b92915050565b60006020828403121561224b5761224a611f77565b5b600061225984828501612220565b91505092915050565b61226b81611f81565b82525050565b60006020820190506122866000830184612262565b92915050565b600080fd5b60008083601f8401126122a7576122a6612022565b5b8235905067ffffffffffffffff8111156122c4576122c361228c565b5b6020830191508360018202830111156122e0576122df6120df565b5b9250929050565b600080602083850312156122fe576122fd611f77565b5b600083013567ffffffffffffffff81111561231c5761231b611f7c565b5b61232885828601612291565b92509250509250929050565b60008115159050919050565b61234981612334565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561238957808201518184015260208101905061236e565b83811115612398576000848401525b50505050565b60006123a98261234f565b6123b3818561235a565b93506123c381856020860161236b565b6123cc81612027565b840191505092915050565b60006040820190506123ec6000830185612340565b81810360208301526123fe818461239e565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61243c81611f81565b82525050565b600061244e8383612433565b60208301905092915050565b6000602082019050919050565b600061247282612407565b61247c8185612412565b935061248783612423565b8060005b838110156124b857815161249f8882612442565b97506124aa8361245a565b92505060018101905061248b565b5085935050505092915050565b600060208201905081810360008301526124df8184612467565b905092915050565b6124f0816121f7565b82525050565b600060208201905061250b60008301846124e7565b92915050565b61251a816121f7565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006125588383612511565b60208301905092915050565b6000602082019050919050565b600061257c82612520565b612586818561252b565b93506125918361253c565b8060005b838110156125c25781516125a9888261254c565b97506125b483612564565b925050600181019050612595565b5085935050505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061260f5761260e6125cf565b5b50565b6000819050612620826125fe565b919050565b600061263082612612565b9050919050565b61264081612625565b82525050565b600060e08301600083015161265e6000860182612433565b5060208301516126716020860182612433565b5060408301516126846040860182612433565b5060608301516126976060860182612433565b5060808301516126aa6080860182612511565b5060a083015184820360a08601526126c28282612571565b91505060c08301516126d760c0860182612637565b508091505092915050565b600060208201905081810360008301526126fc8184612646565b905092915050565b6000806040838503121561271b5761271a611f77565b5b600061272985828601611fa2565b925050602061273a85828601611fa2565b9150509250929050565b6000819050919050565b61275781612744565b82525050565b600061ffff82169050919050565b6127748161275d565b82525050565b600063ffffffff82169050919050565b6127938161277a565b82525050565b600060a0820190506127ae600083018861274e565b6127bb6020830187611ff8565b6127c8604083018661276b565b6127d5606083018561278a565b6127e2608083018461278a565b9695505050505050565b6000815190506127fb81611f8b565b92915050565b60006020828403121561281757612816611f77565b5b6000612825848285016127ec565b91505092915050565b600060408201905061284360008301856124e7565b61285060208301846124e7565b9392505050565b600081905092915050565b50565b6000612872600083612857565b915061287d82612862565b600082019050919050565b600061289382612865565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128d782611f81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561290a5761290961289d565b5b600182019050919050565b600061292082611f81565b915061292b83611f81565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129605761295f61289d565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006129d482611f81565b91506129df83611f81565b9250826129ef576129ee61299a565b5b828206905092915050565b6000612a0582611f81565b9150612a1083611f81565b925082821015612a2357612a2261289d565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220ad5621688870bfda533466b32d0b19b6ee4235e036fb625f83cee01b11f5157464736f6c63430008090033";

type LotteryGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryGame__factory extends ContractFactory {
  constructor(...args: LotteryGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinatorAddress: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LotteryGame> {
    return super.deploy(
      _vrfCoordinatorAddress,
      _keyHash,
      _subscriptionId,
      overrides || {}
    ) as Promise<LotteryGame>;
  }
  override getDeployTransaction(
    _vrfCoordinatorAddress: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinatorAddress,
      _keyHash,
      _subscriptionId,
      overrides || {}
    );
  }
  override attach(address: string): LotteryGame {
    return super.attach(address) as LotteryGame;
  }
  override connect(signer: Signer): LotteryGame__factory {
    return super.connect(signer) as LotteryGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryGameInterface {
    return new utils.Interface(_abi) as LotteryGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryGame {
    return new Contract(address, _abi, signerOrProvider) as LotteryGame;
  }
}
