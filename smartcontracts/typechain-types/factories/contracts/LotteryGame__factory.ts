/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LotteryGame,
  LotteryGameInterface,
} from "../../contracts/LotteryGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinatorAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryAlreadyClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryDurationNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryHasNotFinishedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughParticipants",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerCannotParticipateInLotteries",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPaymentIsNotExact",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPriceNotGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "UserHasAlreadyParticipated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "LotteryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ParticipationRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "WinnerDeclared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "WinnerRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "createLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "declareWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "getLottery",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jackpot",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "participants",
            type: "address[]",
          },
          {
            internalType: "enum LotteryGame.State",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct LotteryGame.Lottery",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenLotteriesIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getParticipationsByUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "openLotteries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "participate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002d4838038062002d48833981810160405281019062000037919062000211565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600181905550806000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200026d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000159826200012c565b9050919050565b6200016b816200014c565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b6000819050919050565b620001a68162000191565b8114620001b257600080fd5b50565b600081519050620001c6816200019b565b92915050565b600067ffffffffffffffff82169050919050565b620001eb81620001cc565b8114620001f757600080fd5b50565b6000815190506200020b81620001e0565b92915050565b6000806000606084860312156200022d576200022c62000127565b5b60006200023d868287016200017a565b93505060206200025086828701620001b5565b92505060406200026386828701620001fa565b9150509250925092565b608051612ab86200029060003960008181610748015261079c0152612ab86000f3fe6080604052600436106100f25760003560e01c8063845c93061161008a578063abdf979c11610059578063abdf979c1461031b578063beff730f14610358578063e580f47b14610395578063fe35804e146103c0576100f2565b8063845c93061461025a5780638da5cb5b1461027657806392e845f6146102a15780639384c39d146102de576100f2565b80633ccfd60b116100c65780633ccfd60b146101b15780634585e33b146101c85780636e04ff0d146101f157806382d63ee61461022f576100f2565b8062c2943c146100f757806309c1ba2e146101205780631fe543e31461014b57806327e235e314610174575b600080fd5b34801561010357600080fd5b5061011e60048036038101906101199190611fdc565b6103e9565b005b34801561012c57600080fd5b5061013561072e565b604051610142919061202c565b60405180910390f35b34801561015757600080fd5b50610172600480360381019061016d91906121a0565b610746565b005b34801561018057600080fd5b5061019b6004803603810190610196919061225a565b610806565b6040516101a89190612296565b60405180910390f35b3480156101bd57600080fd5b506101c661081e565b005b3480156101d457600080fd5b506101ef60048036038101906101ea919061230c565b610920565b005b3480156101fd57600080fd5b506102186004803603810190610213919061230c565b610aba565b6040516102269291906123fc565b60405180910390f35b34801561023b57600080fd5b50610244610cc9565b60405161025191906124ea565b60405180910390f35b610274600480360381019061026f9190611fdc565b610d21565b005b34801561028257600080fd5b5061028b6110c9565b604051610298919061251b565b60405180910390f35b3480156102ad57600080fd5b506102c860048036038101906102c39190611fdc565b6110ef565b6040516102d59190612707565b60405180910390f35b3480156102ea57600080fd5b506103056004803603810190610300919061225a565b611263565b60405161031291906124ea565b60405180910390f35b34801561032757600080fd5b50610342600480360381019061033d9190611fdc565b6112fa565b60405161034f9190612296565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a9190611fdc565b61131e565b60405161038c9190612296565b60405180910390f35b3480156103a157600080fd5b506103aa611342565b6040516103b79190612296565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e29190612729565b61134e565b005b806000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180548060200260200160405190810160405280929190818152602001828054801561050d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104c3575b505050505081526020016006820160009054906101000a900460ff16600281111561053b5761053a6125f4565b5b600281111561054d5761054c6125f4565b5b815250509050600081600001511415610592576040517f0d294f3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006005600085815260200190815260200160002090506105c38160060160009054906101000a900460ff166115f5565b6105d08160020154611656565b6105e08160050180549050611693565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d3060015460008054906101000a900467ffffffffffffffff166003620186a060016040518663ffffffff1660e01b81526004016106609594939291906127be565b602060405180830381600087803b15801561067a57600080fd5b505af115801561068e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b29190612826565b905084600660008381526020019081526020016000208190555060018260060160006101000a81548160ff021916908360028111156106f4576106f36125f4565b5b021790555080857f708691262b677612d65fe057f7788158f3bfedcc25f9d7b50adaa889b0048ace60405160405180910390a35050505050565b60008054906101000a900467ffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107f857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016107ef929190612853565b60405180910390fd5b61080282826116d1565b5050565b60086020528060005260406000206000915090505481565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811161086f57600080fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16816040516108d8906128ad565b60006040518083038185875af1925050503d8060008114610915576040519150601f19603f3d011682016040523d82523d6000602084013e61091a565b606091505b50505050565b600082828101906109319190611fdc565b90506000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610a5657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610a0c575b505050505081526020016006820160009054906101000a900460ff166002811115610a8457610a836125f4565b5b6002811115610a9657610a956125f4565b5b815250509050610aa581611b39565b15610ab457610ab3826103e9565b5b50505050565b6000606060008060405180602001604052806000815250905060005b600980549050811015610cb957600060098281548110610af957610af86128c2565b5b906000526020600020015490506000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610c2957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bdf575b505050505081526020016006820160009054906101000a900460ff166002811115610c5757610c566125f4565b5b6002811115610c6957610c686125f4565b5b815250509050610c7881611b39565b15610ca4576001945081604051602001610c929190612296565b60405160208183030381529060405293505b50508080610cb190612920565b915050610ad6565b5081819350935050509250929050565b60606009805480602002602001604051908101604052809291908181526020018280548015610d1757602002820191906000526020600020905b815481526020019060010190808311610d03575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610da9576040517fb8ea493b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610ecd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e83575b505050505081526020016006820160009054906101000a900460ff166002811115610efb57610efa6125f4565b5b6002811115610f0d57610f0c6125f4565b5b815250509050600081600001511415610f52576040517f0d294f3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560008581526020019081526020016000209050610f7284611b8e565b610f8c8160060160009054906101000a900460ff166115f5565b610f998160010154611dab565b80600501339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160030160008282546110129190612969565b92505081905550600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16847f6c99a0dcc97bf964290aa2caae5586725125e73a4d885d742a168903403dc06e60405160405180910390a350505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6110f7611e86565b600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180548060200260200160405190810160405280929190818152602001828054801561121857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111ce575b505050505081526020016006820160009054906101000a900460ff166002811115611246576112456125f4565b5b6002811115611258576112576125f4565b5b815250509050919050565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156112ee57602002820191906000526020600020905b8154815260200190600101908083116112da575b50505050509050919050565b6009818154811061130a57600080fd5b906000526020600020016000915090505481565b600a818154811061132e57600080fd5b906000526020600020016000915090505481565b60028060000154905081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113d5576040517f3e8be92f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6113de82611de7565b6113e781611e24565b600081426113f59190612969565b90506114016002611e62565b600061140d6002611e78565b905060008067ffffffffffffffff81111561142b5761142a61205d565b5b6040519080825280602002602001820160405280156114595781602001602082028036833780820191505090505b5090506040518060e0016040528083815260200186815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600060028111156114b7576114b66125f4565b5b815250600560008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005019080519060200190611558929190611eeb565b5060c08201518160060160006101000a81548160ff02191690836002811115611584576115836125f4565b5b0217905550905050600982908060018154018082558091505060019003906000526020600020016000909190919091505584827fbcab9af3175c8a9d53b9308a82ee378a84c65b0c22e3dfea2afac802c73a078a856040516115e69190612296565b60405180910390a35050505050565b60006002811115611609576116086125f4565b5b81600281111561161c5761161b6125f4565b5b14611653576040517f4174a35500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b42811115611690576040517fd9b64fdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60028110156116ce576040517f99f46cd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600060066000848152602001908152602001600020549050600060056000838152602001908152602001600020905060008160050180548060200260200160405190810160405280929190818152602001828054801561178657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161173c575b505050505090506000818251866000815181106117a6576117a56128c2565b5b60200260200101516117b891906129ee565b815181106117c9576117c86128c2565b5b60200260200101519050808360040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260030154600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546118699190612969565b9250508190555060028360060160006101000a81548160ff02191690836002811115611898576118976125f4565b5b021790555060005b600980549050811015611ad5576000600982815481106118c3576118c26128c2565b5b906000526020600020015490506000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156119f357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116119a9575b505050505081526020016006820160009054906101000a900460ff166002811115611a2157611a206125f4565b5b6002811115611a3357611a326125f4565b5b8152505090508060000151871415611ac05760096001600980549050611a599190612a1f565b81548110611a6a57611a696128c2565b5b906000526020600020015460098481548110611a8957611a886128c2565b5b90600052602060002001819055506009805480611aa957611aa8612a53565b5b600190038181906000526020600020016000905590555b50508080611acd90612920565b9150506118a0565b508073ffffffffffffffffffffffffffffffffffffffff16847f4d3647387a0671b375a6cfb75769ed74ec10d3a37f6d3b392b12926fe9a099d160405160405180910390a36006600087815260200190815260200160002060009055505050505050565b6000428260400151108015611b76575060006002811115611b5d57611b5c6125f4565b5b8260c001516002811115611b7457611b736125f4565b5b145b8015611b87575060018260a0015151115b9050919050565b6000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015611cb157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611c67575b505050505081526020016006820160009054906101000a900460ff166002811115611cdf57611cde6125f4565b5b6002811115611cf157611cf06125f4565b5b81525050905060008160a001519050600033905060005b8251811015611da457828181518110611d2457611d236128c2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d91576040517fbb25dcac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611d9c90612920565b915050611d08565b5050505050565b803414611de4576040517f7289b57300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60008111611e21576040517f114eafc600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b603c811015611e5f576040517fe2f2556e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006002811115611ee557611ee46125f4565b5b81525090565b828054828255906000526020600020908101928215611f64579160200282015b82811115611f635782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611f0b565b5b509050611f719190611f75565b5090565b5b80821115611f8e576000816000905550600101611f76565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611fb981611fa6565b8114611fc457600080fd5b50565b600081359050611fd681611fb0565b92915050565b600060208284031215611ff257611ff1611f9c565b5b600061200084828501611fc7565b91505092915050565b600067ffffffffffffffff82169050919050565b61202681612009565b82525050565b6000602082019050612041600083018461201d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6120958261204c565b810181811067ffffffffffffffff821117156120b4576120b361205d565b5b80604052505050565b60006120c7611f92565b90506120d3828261208c565b919050565b600067ffffffffffffffff8211156120f3576120f261205d565b5b602082029050602081019050919050565b600080fd5b600061211c612117846120d8565b6120bd565b9050808382526020820190506020840283018581111561213f5761213e612104565b5b835b8181101561216857806121548882611fc7565b845260208401935050602081019050612141565b5050509392505050565b600082601f83011261218757612186612047565b5b8135612197848260208601612109565b91505092915050565b600080604083850312156121b7576121b6611f9c565b5b60006121c585828601611fc7565b925050602083013567ffffffffffffffff8111156121e6576121e5611fa1565b5b6121f285828601612172565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612227826121fc565b9050919050565b6122378161221c565b811461224257600080fd5b50565b6000813590506122548161222e565b92915050565b6000602082840312156122705761226f611f9c565b5b600061227e84828501612245565b91505092915050565b61229081611fa6565b82525050565b60006020820190506122ab6000830184612287565b92915050565b600080fd5b60008083601f8401126122cc576122cb612047565b5b8235905067ffffffffffffffff8111156122e9576122e86122b1565b5b60208301915083600182028301111561230557612304612104565b5b9250929050565b6000806020838503121561232357612322611f9c565b5b600083013567ffffffffffffffff81111561234157612340611fa1565b5b61234d858286016122b6565b92509250509250929050565b60008115159050919050565b61236e81612359565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156123ae578082015181840152602081019050612393565b838111156123bd576000848401525b50505050565b60006123ce82612374565b6123d8818561237f565b93506123e8818560208601612390565b6123f18161204c565b840191505092915050565b60006040820190506124116000830185612365565b818103602083015261242381846123c3565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61246181611fa6565b82525050565b60006124738383612458565b60208301905092915050565b6000602082019050919050565b60006124978261242c565b6124a18185612437565b93506124ac83612448565b8060005b838110156124dd5781516124c48882612467565b97506124cf8361247f565b9250506001810190506124b0565b5085935050505092915050565b60006020820190508181036000830152612504818461248c565b905092915050565b6125158161221c565b82525050565b6000602082019050612530600083018461250c565b92915050565b61253f8161221c565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061257d8383612536565b60208301905092915050565b6000602082019050919050565b60006125a182612545565b6125ab8185612550565b93506125b683612561565b8060005b838110156125e75781516125ce8882612571565b97506125d983612589565b9250506001810190506125ba565b5085935050505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612634576126336125f4565b5b50565b600081905061264582612623565b919050565b600061265582612637565b9050919050565b6126658161264a565b82525050565b600060e0830160008301516126836000860182612458565b5060208301516126966020860182612458565b5060408301516126a96040860182612458565b5060608301516126bc6060860182612458565b5060808301516126cf6080860182612536565b5060a083015184820360a08601526126e78282612596565b91505060c08301516126fc60c086018261265c565b508091505092915050565b60006020820190508181036000830152612721818461266b565b905092915050565b600080604083850312156127405761273f611f9c565b5b600061274e85828601611fc7565b925050602061275f85828601611fc7565b9150509250929050565b6000819050919050565b61277c81612769565b82525050565b600061ffff82169050919050565b61279981612782565b82525050565b600063ffffffff82169050919050565b6127b88161279f565b82525050565b600060a0820190506127d36000830188612773565b6127e0602083018761201d565b6127ed6040830186612790565b6127fa60608301856127af565b61280760808301846127af565b9695505050505050565b60008151905061282081611fb0565b92915050565b60006020828403121561283c5761283b611f9c565b5b600061284a84828501612811565b91505092915050565b6000604082019050612868600083018561250c565b612875602083018461250c565b9392505050565b600081905092915050565b50565b600061289760008361287c565b91506128a282612887565b600082019050919050565b60006128b88261288a565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061292b82611fa6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561295e5761295d6128f1565b5b600182019050919050565b600061297482611fa6565b915061297f83611fa6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156129b4576129b36128f1565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006129f982611fa6565b9150612a0483611fa6565b925082612a1457612a136129bf565b5b828206905092915050565b6000612a2a82611fa6565b9150612a3583611fa6565b925082821015612a4857612a476128f1565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea264697066735822122056f7785527c7b0cad6327635b2d3a1f62e4b2bda16b7414a2f77f81b4f2cc6f164736f6c63430008090033";

type LotteryGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryGame__factory extends ContractFactory {
  constructor(...args: LotteryGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinatorAddress: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LotteryGame> {
    return super.deploy(
      _vrfCoordinatorAddress,
      _keyHash,
      _subscriptionId,
      overrides || {}
    ) as Promise<LotteryGame>;
  }
  override getDeployTransaction(
    _vrfCoordinatorAddress: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinatorAddress,
      _keyHash,
      _subscriptionId,
      overrides || {}
    );
  }
  override attach(address: string): LotteryGame {
    return super.attach(address) as LotteryGame;
  }
  override connect(signer: Signer): LotteryGame__factory {
    return super.connect(signer) as LotteryGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryGameInterface {
    return new utils.Interface(_abi) as LotteryGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryGame {
    return new Contract(address, _abi, signerOrProvider) as LotteryGame;
  }
}
