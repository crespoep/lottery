/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  LotteryGame,
  LotteryGameInterface,
} from "../../contracts/LotteryGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinatorAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint64",
        name: "_subscriptionId",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CallerIsNotTheOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryAlreadyClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryDurationNotEnough",
    type: "error",
  },
  {
    inputs: [],
    name: "LotteryHasNotFinishedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughParticipants",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "have",
        type: "address",
      },
      {
        internalType: "address",
        name: "want",
        type: "address",
      },
    ],
    name: "OnlyCoordinatorCanFulfill",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerCannotParticipateInLotteries",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPaymentIsNotExact",
    type: "error",
  },
  {
    inputs: [],
    name: "TicketPriceNotGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "UserHasAlreadyParticipated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
    ],
    name: "LotteryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ParticipationRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "WinnerDeclared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "WinnerRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_ticket",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "createLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "declareWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "getLottery",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticket",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "jackpot",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "winner",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "participants",
            type: "address[]",
          },
          {
            internalType: "enum LotteryGame.State",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct LotteryGame.Lottery",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpenLotteriesIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getParticipationsByUser",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "openLotteries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "participate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "performData",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomWords",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "randomWords",
        type: "uint256[]",
      },
    ],
    name: "rawFulfillRandomWords",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002bde38038062002bde833981810160405281019062000037919062000211565b828073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505082600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600181905550806000806101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200026d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000159826200012c565b9050919050565b6200016b816200014c565b81146200017757600080fd5b50565b6000815190506200018b8162000160565b92915050565b6000819050919050565b620001a68162000191565b8114620001b257600080fd5b50565b600081519050620001c6816200019b565b92915050565b600067ffffffffffffffff82169050919050565b620001eb81620001cc565b8114620001f757600080fd5b50565b6000815190506200020b81620001e0565b92915050565b6000806000606084860312156200022d576200022c62000127565b5b60006200023d868287016200017a565b93505060206200025086828701620001b5565b92505060406200026386828701620001fa565b9150509250925092565b60805161294e6200029060003960008181610726015261077a015261294e6000f3fe6080604052600436106100e75760003560e01c8063845c93061161008a578063abdf979c11610059578063abdf979c146102f9578063beff730f14610336578063e580f47b14610373578063fe35804e1461039e576100e7565b8063845c9306146102385780638da5cb5b1461025457806392e845f61461027f5780639384c39d146102bc576100e7565b806327e235e3116100c657806327e235e3146101695780634585e33b146101a65780636e04ff0d146101cf57806382d63ee61461020d576100e7565b8062c2943c146100ec57806309c1ba2e146101155780631fe543e314610140575b600080fd5b3480156100f857600080fd5b50610113600480360381019061010e9190611eb8565b6103c7565b005b34801561012157600080fd5b5061012a61070c565b6040516101379190611f08565b60405180910390f35b34801561014c57600080fd5b506101676004803603810190610162919061207c565b610724565b005b34801561017557600080fd5b50610190600480360381019061018b9190612136565b6107e4565b60405161019d9190612172565b60405180910390f35b3480156101b257600080fd5b506101cd60048036038101906101c891906121e8565b6107fc565b005b3480156101db57600080fd5b506101f660048036038101906101f191906121e8565b610996565b6040516102049291906122d8565b60405180910390f35b34801561021957600080fd5b50610222610ba5565b60405161022f91906123c6565b60405180910390f35b610252600480360381019061024d9190611eb8565b610bfd565b005b34801561026057600080fd5b50610269610fa5565b60405161027691906123f7565b60405180910390f35b34801561028b57600080fd5b506102a660048036038101906102a19190611eb8565b610fcb565b6040516102b391906125e3565b60405180910390f35b3480156102c857600080fd5b506102e360048036038101906102de9190612136565b61113f565b6040516102f091906123c6565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b9190611eb8565b6111d6565b60405161032d9190612172565b60405180910390f35b34801561034257600080fd5b5061035d60048036038101906103589190611eb8565b6111fa565b60405161036a9190612172565b60405180910390f35b34801561037f57600080fd5b5061038861121e565b6040516103959190612172565b60405180910390f35b3480156103aa57600080fd5b506103c560048036038101906103c09190612605565b61122a565b005b806000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156104eb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116104a1575b505050505081526020016006820160009054906101000a900460ff166002811115610519576105186124d0565b5b600281111561052b5761052a6124d0565b5b815250509050600081600001511415610570576040517f0d294f3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060056000858152602001908152602001600020905061059481600201546114d1565b6105a4816005018054905061150e565b6105be8160060160009054906101000a900460ff1661154c565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635d3b1d3060015460008054906101000a900467ffffffffffffffff166003620186a060016040518663ffffffff1660e01b815260040161063e95949392919061269a565b602060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190612702565b905084600660008381526020019081526020016000208190555060018260060160006101000a81548160ff021916908360028111156106d2576106d16124d0565b5b021790555080857f708691262b677612d65fe057f7788158f3bfedcc25f9d7b50adaa889b0048ace60405160405180910390a35050505050565b60008054906101000a900467ffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107d657337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016107cd92919061272f565b60405180910390fd5b6107e082826115ad565b5050565b60086020528060005260406000206000915090505481565b6000828281019061080d9190611eb8565b90506000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820180548060200260200160405190810160405280929190818152602001828054801561093257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116108e8575b505050505081526020016006820160009054906101000a900460ff1660028111156109605761095f6124d0565b5b6002811115610972576109716124d0565b5b81525050905061098181611a15565b156109905761098f826103c7565b5b50505050565b6000606060008060405180602001604052806000815250905060005b600980549050811015610b95576000600982815481106109d5576109d4612758565b5b906000526020600020015490506000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610b0557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610abb575b505050505081526020016006820160009054906101000a900460ff166002811115610b3357610b326124d0565b5b6002811115610b4557610b446124d0565b5b815250509050610b5481611a15565b15610b80576001945081604051602001610b6e9190612172565b60405160208183030381529060405293505b50508080610b8d906127b6565b9150506109b2565b5081819350935050509250929050565b60606009805480602002602001604051908101604052809291908181526020018280548015610bf357602002820191906000526020600020905b815481526020019060010190808311610bdf575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415610c85576040517fb8ea493b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015610da957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d5f575b505050505081526020016006820160009054906101000a900460ff166002811115610dd757610dd66124d0565b5b6002811115610de957610de86124d0565b5b815250509050600081600001511415610e2e576040517f0d294f3400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600560008581526020019081526020016000209050610e4e84611a6a565b610e688160060160009054906101000a900460ff1661154c565b610e758160010154611c87565b80600501339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034816003016000828254610eee91906127ff565b92505081905550600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16847f6c99a0dcc97bf964290aa2caae5586725125e73a4d885d742a168903403dc06e60405160405180910390a350505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610fd3611d62565b600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156110f457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116110aa575b505050505081526020016006820160009054906101000a900460ff166002811115611122576111216124d0565b5b6002811115611134576111336124d0565b5b815250509050919050565b6060600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156111ca57602002820191906000526020600020905b8154815260200190600101908083116111b6575b50505050509050919050565b600981815481106111e657600080fd5b906000526020600020016000915090505481565b600a818154811061120a57600080fd5b906000526020600020016000915090505481565b60028060000154905081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112b1576040517f3e8be92f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112ba82611cc3565b6112c381611d00565b600081426112d191906127ff565b90506112dd6002611d3e565b60006112e96002611d54565b905060008067ffffffffffffffff81111561130757611306611f39565b5b6040519080825280602002602001820160405280156113355781602001602082028036833780820191505090505b5090506040518060e0016040528083815260200186815260200184815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200182815260200160006002811115611393576113926124d0565b5b815250600560008481526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005019080519060200190611434929190611dc7565b5060c08201518160060160006101000a81548160ff021916908360028111156114605761145f6124d0565b5b0217905550905050600982908060018154018082558091505060019003906000526020600020016000909190919091505584827fbcab9af3175c8a9d53b9308a82ee378a84c65b0c22e3dfea2afac802c73a078a856040516114c29190612172565b60405180910390a35050505050565b4281111561150b576040517fd9b64fdd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6002811015611549576040517f99f46cd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600060028111156115605761155f6124d0565b5b816002811115611573576115726124d0565b5b146115aa576040517f4174a35500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b600060066000848152602001908152602001600020549050600060056000838152602001908152602001600020905060008160050180548060200260200160405190810160405280929190818152602001828054801561166257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611618575b5050505050905060008182518660008151811061168257611681612758565b5b60200260200101516116949190612884565b815181106116a5576116a4612758565b5b60200260200101519050808360040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260030154600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461174591906127ff565b9250508190555060028360060160006101000a81548160ff02191690836002811115611774576117736124d0565b5b021790555060005b6009805490508110156119b15760006009828154811061179f5761179e612758565b5b906000526020600020015490506000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582018054806020026020016040519081016040528092919081815260200182805480156118cf57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611885575b505050505081526020016006820160009054906101000a900460ff1660028111156118fd576118fc6124d0565b5b600281111561190f5761190e6124d0565b5b815250509050806000015187141561199c576009600160098054905061193591906128b5565b8154811061194657611945612758565b5b90600052602060002001546009848154811061196557611964612758565b5b90600052602060002001819055506009805480611985576119846128e9565b5b600190038181906000526020600020016000905590555b505080806119a9906127b6565b91505061177c565b508073ffffffffffffffffffffffffffffffffffffffff16847f4d3647387a0671b375a6cfb75769ed74ec10d3a37f6d3b392b12926fe9a099d160405160405180910390a36006600087815260200190815260200160002060009055505050505050565b6000428260400151108015611a52575060006002811115611a3957611a386124d0565b5b8260c001516002811115611a5057611a4f6124d0565b5b145b8015611a63575060018260a0015151115b9050919050565b6000600560008381526020019081526020016000206040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160058201805480602002602001604051908101604052809291908181526020018280548015611b8d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611b43575b505050505081526020016006820160009054906101000a900460ff166002811115611bbb57611bba6124d0565b5b6002811115611bcd57611bcc6124d0565b5b81525050905060008160a001519050600033905060005b8251811015611c8057828181518110611c0057611bff612758565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611c6d576040517fbb25dcac00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8080611c78906127b6565b915050611be4565b5050505050565b803414611cc0576040517f7289b57300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b60008111611cfd576040517f114eafc600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b603c811015611d3b576040517fe2f2556e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6001816000016000828254019250508190555050565b600081600001549050919050565b6040518060e0016040528060008152602001600081526020016000815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006002811115611dc157611dc06124d0565b5b81525090565b828054828255906000526020600020908101928215611e40579160200282015b82811115611e3f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611de7565b5b509050611e4d9190611e51565b5090565b5b80821115611e6a576000816000905550600101611e52565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611e9581611e82565b8114611ea057600080fd5b50565b600081359050611eb281611e8c565b92915050565b600060208284031215611ece57611ecd611e78565b5b6000611edc84828501611ea3565b91505092915050565b600067ffffffffffffffff82169050919050565b611f0281611ee5565b82525050565b6000602082019050611f1d6000830184611ef9565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f7182611f28565b810181811067ffffffffffffffff82111715611f9057611f8f611f39565b5b80604052505050565b6000611fa3611e6e565b9050611faf8282611f68565b919050565b600067ffffffffffffffff821115611fcf57611fce611f39565b5b602082029050602081019050919050565b600080fd5b6000611ff8611ff384611fb4565b611f99565b9050808382526020820190506020840283018581111561201b5761201a611fe0565b5b835b8181101561204457806120308882611ea3565b84526020840193505060208101905061201d565b5050509392505050565b600082601f83011261206357612062611f23565b5b8135612073848260208601611fe5565b91505092915050565b6000806040838503121561209357612092611e78565b5b60006120a185828601611ea3565b925050602083013567ffffffffffffffff8111156120c2576120c1611e7d565b5b6120ce8582860161204e565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612103826120d8565b9050919050565b612113816120f8565b811461211e57600080fd5b50565b6000813590506121308161210a565b92915050565b60006020828403121561214c5761214b611e78565b5b600061215a84828501612121565b91505092915050565b61216c81611e82565b82525050565b60006020820190506121876000830184612163565b92915050565b600080fd5b60008083601f8401126121a8576121a7611f23565b5b8235905067ffffffffffffffff8111156121c5576121c461218d565b5b6020830191508360018202830111156121e1576121e0611fe0565b5b9250929050565b600080602083850312156121ff576121fe611e78565b5b600083013567ffffffffffffffff81111561221d5761221c611e7d565b5b61222985828601612192565b92509250509250929050565b60008115159050919050565b61224a81612235565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561228a57808201518184015260208101905061226f565b83811115612299576000848401525b50505050565b60006122aa82612250565b6122b4818561225b565b93506122c481856020860161226c565b6122cd81611f28565b840191505092915050565b60006040820190506122ed6000830185612241565b81810360208301526122ff818461229f565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61233d81611e82565b82525050565b600061234f8383612334565b60208301905092915050565b6000602082019050919050565b600061237382612308565b61237d8185612313565b935061238883612324565b8060005b838110156123b95781516123a08882612343565b97506123ab8361235b565b92505060018101905061238c565b5085935050505092915050565b600060208201905081810360008301526123e08184612368565b905092915050565b6123f1816120f8565b82525050565b600060208201905061240c60008301846123e8565b92915050565b61241b816120f8565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006124598383612412565b60208301905092915050565b6000602082019050919050565b600061247d82612421565b612487818561242c565b93506124928361243d565b8060005b838110156124c35781516124aa888261244d565b97506124b583612465565b925050600181019050612496565b5085935050505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106125105761250f6124d0565b5b50565b6000819050612521826124ff565b919050565b600061253182612513565b9050919050565b61254181612526565b82525050565b600060e08301600083015161255f6000860182612334565b5060208301516125726020860182612334565b5060408301516125856040860182612334565b5060608301516125986060860182612334565b5060808301516125ab6080860182612412565b5060a083015184820360a08601526125c38282612472565b91505060c08301516125d860c0860182612538565b508091505092915050565b600060208201905081810360008301526125fd8184612547565b905092915050565b6000806040838503121561261c5761261b611e78565b5b600061262a85828601611ea3565b925050602061263b85828601611ea3565b9150509250929050565b6000819050919050565b61265881612645565b82525050565b600061ffff82169050919050565b6126758161265e565b82525050565b600063ffffffff82169050919050565b6126948161267b565b82525050565b600060a0820190506126af600083018861264f565b6126bc6020830187611ef9565b6126c9604083018661266c565b6126d6606083018561268b565b6126e3608083018461268b565b9695505050505050565b6000815190506126fc81611e8c565b92915050565b60006020828403121561271857612717611e78565b5b6000612726848285016126ed565b91505092915050565b600060408201905061274460008301856123e8565b61275160208301846123e8565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006127c182611e82565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127f4576127f3612787565b5b600182019050919050565b600061280a82611e82565b915061281583611e82565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561284a57612849612787565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061288f82611e82565b915061289a83611e82565b9250826128aa576128a9612855565b5b828206905092915050565b60006128c082611e82565b91506128cb83611e82565b9250828210156128de576128dd612787565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220a5e2cdf3a3f99cb9ecde9b89f94db24695ebfdad2f1ed9d95c64638f2084e2a364736f6c63430008090033";

type LotteryGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LotteryGame__factory extends ContractFactory {
  constructor(...args: LotteryGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vrfCoordinatorAddress: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LotteryGame> {
    return super.deploy(
      _vrfCoordinatorAddress,
      _keyHash,
      _subscriptionId,
      overrides || {}
    ) as Promise<LotteryGame>;
  }
  override getDeployTransaction(
    _vrfCoordinatorAddress: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _subscriptionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vrfCoordinatorAddress,
      _keyHash,
      _subscriptionId,
      overrides || {}
    );
  }
  override attach(address: string): LotteryGame {
    return super.attach(address) as LotteryGame;
  }
  override connect(signer: Signer): LotteryGame__factory {
    return super.connect(signer) as LotteryGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryGameInterface {
    return new utils.Interface(_abi) as LotteryGameInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LotteryGame {
    return new Contract(address, _abi, signerOrProvider) as LotteryGame;
  }
}
